/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/amenities": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.amenities.id"];
          created_at?: parameters["rowFilter.amenities.created_at"];
          name?: parameters["rowFilter.amenities.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["amenities"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** amenities */
          amenities?: definitions["amenities"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.amenities.id"];
          created_at?: parameters["rowFilter.amenities.created_at"];
          name?: parameters["rowFilter.amenities.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.amenities.id"];
          created_at?: parameters["rowFilter.amenities.created_at"];
          name?: parameters["rowFilter.amenities.name"];
        };
        body: {
          /** amenities */
          amenities?: definitions["amenities"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/departments": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.departments.id"];
          created_at?: parameters["rowFilter.departments.created_at"];
          name?: parameters["rowFilter.departments.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["departments"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** departments */
          departments?: definitions["departments"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.departments.id"];
          created_at?: parameters["rowFilter.departments.created_at"];
          name?: parameters["rowFilter.departments.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.departments.id"];
          created_at?: parameters["rowFilter.departments.created_at"];
          name?: parameters["rowFilter.departments.name"];
        };
        body: {
          /** departments */
          departments?: definitions["departments"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/locations": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.locations.id"];
          created_at?: parameters["rowFilter.locations.created_at"];
          name?: parameters["rowFilter.locations.name"];
          address?: parameters["rowFilter.locations.address"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["locations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** locations */
          locations?: definitions["locations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.locations.id"];
          created_at?: parameters["rowFilter.locations.created_at"];
          name?: parameters["rowFilter.locations.name"];
          address?: parameters["rowFilter.locations.address"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.locations.id"];
          created_at?: parameters["rowFilter.locations.created_at"];
          name?: parameters["rowFilter.locations.name"];
          address?: parameters["rowFilter.locations.address"];
        };
        body: {
          /** locations */
          locations?: definitions["locations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/locations_amenities": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.locations_amenities.created_at"];
          location_id?: parameters["rowFilter.locations_amenities.location_id"];
          amenity_id?: parameters["rowFilter.locations_amenities.amenity_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["locations_amenities"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** locations_amenities */
          locations_amenities?: definitions["locations_amenities"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.locations_amenities.created_at"];
          location_id?: parameters["rowFilter.locations_amenities.location_id"];
          amenity_id?: parameters["rowFilter.locations_amenities.amenity_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.locations_amenities.created_at"];
          location_id?: parameters["rowFilter.locations_amenities.location_id"];
          amenity_id?: parameters["rowFilter.locations_amenities.amenity_id"];
        };
        body: {
          /** locations_amenities */
          locations_amenities?: definitions["locations_amenities"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/locations_services": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.locations_services.created_at"];
          location_id?: parameters["rowFilter.locations_services.location_id"];
          service_id?: parameters["rowFilter.locations_services.service_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["locations_services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** locations_services */
          locations_services?: definitions["locations_services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.locations_services.created_at"];
          location_id?: parameters["rowFilter.locations_services.location_id"];
          service_id?: parameters["rowFilter.locations_services.service_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.locations_services.created_at"];
          location_id?: parameters["rowFilter.locations_services.location_id"];
          service_id?: parameters["rowFilter.locations_services.service_id"];
        };
        body: {
          /** locations_services */
          locations_services?: definitions["locations_services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/programs": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.programs.id"];
          created_at?: parameters["rowFilter.programs.created_at"];
          name?: parameters["rowFilter.programs.name"];
          department_id?: parameters["rowFilter.programs.department_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["programs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** programs */
          programs?: definitions["programs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.programs.id"];
          created_at?: parameters["rowFilter.programs.created_at"];
          name?: parameters["rowFilter.programs.name"];
          department_id?: parameters["rowFilter.programs.department_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.programs.id"];
          created_at?: parameters["rowFilter.programs.created_at"];
          name?: parameters["rowFilter.programs.name"];
          department_id?: parameters["rowFilter.programs.department_id"];
        };
        body: {
          /** programs */
          programs?: definitions["programs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/programs_services": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.programs_services.created_at"];
          program_id?: parameters["rowFilter.programs_services.program_id"];
          service_id?: parameters["rowFilter.programs_services.service_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["programs_services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** programs_services */
          programs_services?: definitions["programs_services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.programs_services.created_at"];
          program_id?: parameters["rowFilter.programs_services.program_id"];
          service_id?: parameters["rowFilter.programs_services.service_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.programs_services.created_at"];
          program_id?: parameters["rowFilter.programs_services.program_id"];
          service_id?: parameters["rowFilter.programs_services.service_id"];
        };
        body: {
          /** programs_services */
          programs_services?: definitions["programs_services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/services": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          name?: parameters["rowFilter.services.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** services */
          services?: definitions["services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          name?: parameters["rowFilter.services.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          name?: parameters["rowFilter.services.name"];
        };
        body: {
          /** services */
          services?: definitions["services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tags": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tags.id"];
          created_at?: parameters["rowFilter.tags.created_at"];
          name?: parameters["rowFilter.tags.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tags"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tags */
          tags?: definitions["tags"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tags.id"];
          created_at?: parameters["rowFilter.tags.created_at"];
          name?: parameters["rowFilter.tags.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tags.id"];
          created_at?: parameters["rowFilter.tags.created_at"];
          name?: parameters["rowFilter.tags.name"];
        };
        body: {
          /** tags */
          tags?: definitions["tags"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tags_services": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.tags_services.created_at"];
          tag_id?: parameters["rowFilter.tags_services.tag_id"];
          service_id?: parameters["rowFilter.tags_services.service_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tags_services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tags_services */
          tags_services?: definitions["tags_services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.tags_services.created_at"];
          tag_id?: parameters["rowFilter.tags_services.tag_id"];
          service_id?: parameters["rowFilter.tags_services.service_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.tags_services.created_at"];
          tag_id?: parameters["rowFilter.tags_services.tag_id"];
          service_id?: parameters["rowFilter.tags_services.service_id"];
        };
        body: {
          /** tags_services */
          tags_services?: definitions["tags_services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/amenity_list": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  amenities: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
  };
  departments: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name?: string;
  };
  locations: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
    /** Format: text */
    address?: string;
  };
  locations_amenities: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `locations.id`.<fk table='locations' column='id'/>
     */
    location_id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `amenities.id`.<fk table='amenities' column='id'/>
     */
    amenity_id: number;
  };
  locations_services: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `locations.id`.<fk table='locations' column='id'/>
     */
    location_id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id: number;
  };
  programs: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `departments.id`.<fk table='departments' column='id'/>
     */
    department_id?: number;
  };
  programs_services: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `programs.id`.<fk table='programs' column='id'/>
     */
    program_id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id: number;
  };
  services: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
  };
  tags: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
  };
  tags_services: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>
     */
    tag_id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description amenities */
  "body.amenities": definitions["amenities"];
  /** Format: bigint */
  "rowFilter.amenities.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.amenities.created_at": string;
  /** Format: text */
  "rowFilter.amenities.name": string;
  /** @description departments */
  "body.departments": definitions["departments"];
  /** Format: bigint */
  "rowFilter.departments.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.departments.created_at": string;
  /** Format: text */
  "rowFilter.departments.name": string;
  /** @description locations */
  "body.locations": definitions["locations"];
  /** Format: bigint */
  "rowFilter.locations.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.locations.created_at": string;
  /** Format: text */
  "rowFilter.locations.name": string;
  /** Format: text */
  "rowFilter.locations.address": string;
  /** @description locations_amenities */
  "body.locations_amenities": definitions["locations_amenities"];
  /** Format: timestamp with time zone */
  "rowFilter.locations_amenities.created_at": string;
  /** Format: bigint */
  "rowFilter.locations_amenities.location_id": string;
  /** Format: bigint */
  "rowFilter.locations_amenities.amenity_id": string;
  /** @description locations_services */
  "body.locations_services": definitions["locations_services"];
  /** Format: timestamp with time zone */
  "rowFilter.locations_services.created_at": string;
  /** Format: bigint */
  "rowFilter.locations_services.location_id": string;
  /** Format: bigint */
  "rowFilter.locations_services.service_id": string;
  /** @description programs */
  "body.programs": definitions["programs"];
  /** Format: bigint */
  "rowFilter.programs.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.programs.created_at": string;
  /** Format: text */
  "rowFilter.programs.name": string;
  /** Format: bigint */
  "rowFilter.programs.department_id": string;
  /** @description programs_services */
  "body.programs_services": definitions["programs_services"];
  /** Format: timestamp with time zone */
  "rowFilter.programs_services.created_at": string;
  /** Format: bigint */
  "rowFilter.programs_services.program_id": string;
  /** Format: bigint */
  "rowFilter.programs_services.service_id": string;
  /** @description services */
  "body.services": definitions["services"];
  /** Format: bigint */
  "rowFilter.services.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.services.created_at": string;
  /** Format: text */
  "rowFilter.services.name": string;
  /** @description tags */
  "body.tags": definitions["tags"];
  /** Format: bigint */
  "rowFilter.tags.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.tags.created_at": string;
  /** Format: text */
  "rowFilter.tags.name": string;
  /** @description tags_services */
  "body.tags_services": definitions["tags_services"];
  /** Format: timestamp with time zone */
  "rowFilter.tags_services.created_at": string;
  /** Format: bigint */
  "rowFilter.tags_services.tag_id": string;
  /** Format: bigint */
  "rowFilter.tags_services.service_id": string;
}

export interface operations {}

export interface external {}
